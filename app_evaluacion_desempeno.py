import streamlit as st
import pandas as pd
import gspread
from google.oauth2.service_account import Credentials
from datetime import datetime

st.set_page_config(layout="wide")

# ===========================================================
# CONFIGURACI√ìN GOOGLE SHEETS
# ===========================================================
scopes = ["https://www.googleapis.com/auth/spreadsheets",
          "https://www.googleapis.com/auth/drive"]

import json
creds_dict = json.loads(st.secrets["general"]["gcp_service_account"])
creds = Credentials.from_service_account_info(creds_dict, scopes=scopes)

client = gspread.authorize(creds)

# Abre el archivo y la hoja
spreadsheet = client.open("trabajadores")
hoja = spreadsheet.worksheet("trabajadores")

# Cargar datos de la hoja
datos = hoja.get_all_records()
if not datos:
    st.error("‚ö†Ô∏è La hoja 'trabajadores' est√° vac√≠a o sin encabezados.")
    st.stop()

trabajadores = pd.DataFrame(datos)

# ===========================================================
# INTERFAZ PRINCIPAL
# ===========================================================
st.title("üíº Sistema de Evaluaci√≥n del Desempe√±o")

modo = st.sidebar.radio("Selecciona el modo:", ("RH", "Administrador"))

# ===========================================================
# MODO ADMINISTRADOR
# ===========================================================
if modo == "Administrador":
    st.subheader("Modo Administrador: Informaci√≥n de la Base Maestra")
    st.info("La base maestra se carga autom√°ticamente desde la hoja 'trabajadores'.")
    st.dataframe(trabajadores)

# ===========================================================
# MODO RH: EVALUACI√ìN
# ===========================================================
elif modo == "RH":
    st.subheader("Modo Recursos Humanos: Evaluaci√≥n del Desempe√±o")

    # Seleccionar trabajador
    lista_nombres = trabajadores["Nombre(s) y Apellidos:"].tolist()
    seleccionado = st.selectbox("Selecciona un trabajador:", lista_nombres)
    trab = trabajadores[trabajadores["Nombre(s) y Apellidos:"] == seleccionado].iloc[0]

    # -------------------------------------------------------
    # DATOS PERSONALES
    # -------------------------------------------------------
    st.subheader("Datos Personales")
    cols = st.columns(2)
    campos = [
        "Nombre(s) y Apellidos:", "C.U.R.P.", "R.F.C.", "Superior Jer√°rquico:", "√Årea de Adscripci√≥n:",
        "Puesto que desempe√±a:", "Nivel:", "Fecha del Nombramiento:", "Antig√ºedad en el Puesto:", "Antig√ºedad en Gobierno:"
    ]
    etiquetas = [
        "Nombre", "CURP", "RFC", "Superior", "√Årea", "Puesto", "Nivel",
        "Fecha de Nombramiento", "Antig√ºedad en Puesto", "Antig√ºedad en Gobierno"
    ]
    for i, campo in enumerate(campos):
        cols[i % 2].text_input(etiquetas[i], trab[campo], disabled=True)

    # -------------------------------------------------------
    # ACTIVIDADES PRINCIPALES
    # -------------------------------------------------------
    st.subheader("Actividades Principales")
    for i in range(1, 4):
        st.text_input(f"Actividad {i}", trab[f"Principal Funcion {i}"], disabled=True)

    # -------------------------------------------------------
    # METAS REALES
    # -------------------------------------------------------
    st.subheader("Metas Reales Cumplidas")
    meta_real = {}
    resultados = {}
    for i in range(1, 5):
        desc = trab[f"Meta {i} descripci√≥n"] or "Sin descripci√≥n"
        prog = float(trab[f"Meta {i} prog"] or 0)
        st.markdown(f"**Meta {i}:** {desc} (Programada: {prog})")
        meta_real[f"meta{i}_real"] = st.number_input(f"Cumplimiento real de Meta {i}", min_value=0.0, value=0.0, step=0.1, key=f"meta{i}_real")
        resultados[f"resultado{i}"] = round(meta_real[f"meta{i}_real"] / prog * 100, 2) if prog else 0
        st.write(f"Resultado: {resultados[f'resultado{i}']}%")

    # -------------------------------------------------------
    # FACTORES DE CALIDAD
    # -------------------------------------------------------
    st.subheader("Factores de Calidad")

    descripciones = {
        "CONOCIMIENTO DEL PUESTO": [
            "1Ô∏è‚É£ Posee m√≠nimos conocimientos del puesto que tiene asignado, lo que le impide cumplir con la oportunidad y calidad establecidas.",
            "2Ô∏è‚É£ Posee conocimientos elementales del puesto, lo que provoca deficiencias en la oportunidad y calidad b√°sicas establecidas.",
            "3Ô∏è‚É£ Posee un regular conocimiento del puesto, lo que le permite prestar servicios con oportunidad y calidad b√°sicas.",
            "4Ô∏è‚É£ Posee amplios conocimientos del puesto que tiene asignado, lo que le permite prestar los servicios con oportunidad y calidad requeridas."
        ],
        "CRITERIO": [
            "1Ô∏è‚É£ Propone soluciones irrelevantes a los problemas de trabajo que se le presentan.",
            "2Ô∏è‚É£ Propone soluciones aceptables a los problemas de trabajo que se le presentan.",
            "3Ô∏è‚É£ Propone soluciones adecuadas a los problemas de trabajo que se le presentan.",
            "4Ô∏è‚É£ Propone soluciones √≥ptimas a los problemas de trabajo que se le presentan."
        ],
        "CALIDAD DEL TRABAJO": [
            "1Ô∏è‚É£ Realiza trabajos con alto √≠ndice de errores en su confiabilidad, exactitud y presentaci√≥n.",
            "2Ô∏è‚É£ Realiza trabajos regulares con algunos errores.",
            "3Ô∏è‚É£ Realiza buenos trabajos y excepcionalmente comete errores.",
            "4Ô∏è‚É£ Realiza trabajos excelentes sin errores en su confiabilidad, exactitud y presentaci√≥n."
        ],
        "T√âCNICA Y ORGANIZACI√ìN DEL TRABAJO": [
            "1Ô∏è‚É£ Aplica en grado m√≠nimo las t√©cnicas y organizaci√≥n establecidas.",
            "2Ô∏è‚É£ Aplica ocasionalmente las t√©cnicas establecidas.",
            "3Ô∏è‚É£ Aplica la mayor√≠a de las veces las t√©cnicas establecidas.",
            "4Ô∏è‚É£ Aplica en grado √≥ptimo las t√©cnicas y organizaci√≥n establecidas."
        ],
        "NECESIDAD DE SUPERVISI√ìN": [
            "1Ô∏è‚É£ Requiere permanente supervisi√≥n para realizar las funciones asignadas.",
            "2Ô∏è‚É£ Requiere ocasional supervisi√≥n para realizar las funciones asignadas.",
            "3Ô∏è‚É£ Requiere m√≠nima supervisi√≥n para realizar las funciones asignadas.",
            "4Ô∏è‚É£ Requiere nula supervisi√≥n para realizar las funciones asignadas."
        ],
        "CAPACITACI√ìN RECIBIDA": [
            "1Ô∏è‚É£ Aplica m√≠nimamente los conocimientos adquiridos mediante la capacitaci√≥n.",
            "2Ô∏è‚É£ Aplica limitadamente los conocimientos adquiridos.",
            "3Ô∏è‚É£ Aplica suficientemente los conocimientos adquiridos, elevando la eficiencia.",
            "4Ô∏è‚É£ Aplica ampliamente los conocimientos adquiridos, elevando la eficiencia al m√°ximo."
        ],
        "INICIATIVA": [
            "1Ô∏è‚É£ Realiza nulas aportaciones para el mejoramiento del trabajo.",
            "2Ô∏è‚É£ Realiza aportaciones irrelevantes para el mejoramiento.",
            "3Ô∏è‚É£ Realiza aportaciones destacadas que mejoran calidad y tiempos.",
            "4Ô∏è‚É£ Realiza aportaciones √≥ptimas y continuas para el mejoramiento."
        ],
        "COLABORACI√ìN Y DISCRECI√ìN": [
            "1Ô∏è‚É£ Muestra nula disposici√≥n para colaborar y provoca conflictos.",
            "2Ô∏è‚É£ Muestra regular disposici√≥n y comete indiscreciones involuntarias.",
            "3Ô∏è‚É£ Muestra buena disposici√≥n y prudencia en el manejo de informaci√≥n.",
            "4Ô∏è‚É£ Muestra notable disposici√≥n y utiliza positivamente la informaci√≥n."
        ],
        "RESPONSABILIDAD Y DISCIPLINA": [
            "1Ô∏è‚É£ Cumple m√≠nimamente con las metas y evade disposiciones.",
            "2Ô∏è‚É£ Cumple ocasionalmente con las metas y objeta disposiciones.",
            "3Ô∏è‚É£ Cumple la mayor√≠a de las veces con las metas y disposiciones.",
            "4Ô∏è‚É£ Cumple invariablemente con metas institucionales y disposiciones."
        ],
        "TRABAJO EN EQUIPO": [
            "1Ô∏è‚É£ Manifiesta nula disposici√≥n y entorpece el trabajo del equipo.",
            "2Ô∏è‚É£ Manifiesta regular disposici√≥n y ocasionalmente interfiere.",
            "3Ô∏è‚É£ Manifiesta buena disposici√≥n, contribuyendo al equipo.",
            "4Ô∏è‚É£ Manifiesta notable disposici√≥n, siendo un elemento clave del equipo."
        ],
        "RELACIONES INTERPERSONALES": [
            "1Ô∏è‚É£ Mantiene nulo grado de interacci√≥n con jefes, compa√±eros y p√∫blico.",
            "2Ô∏è‚É£ Mantiene regular grado de interacci√≥n con jefes, compa√±eros y p√∫blico.",
            "3Ô∏è‚É£ Mantiene buen grado de interacci√≥n con jefes, compa√±eros y p√∫blico.",
            "4Ô∏è‚É£ Mantiene excelente grado de interacci√≥n con jefes, compa√±eros y p√∫blico."
        ],
        "MEJORA CONTINUA": [
            "1Ô∏è‚É£ Demuestra m√≠nimo compromiso para identificar √°reas de oportunidad.",
            "2Ô∏è‚É£ Demuestra regular compromiso para proponer mejoras.",
            "3Ô∏è‚É£ Demuestra alto compromiso para identificar y proponer mejoras.",
            "4Ô∏è‚É£ Demuestra amplio compromiso para mejorar continuamente su desempe√±o."
        ]
    }

    st.markdown("""
        <style>
        .tooltip { position: relative; display: inline-block; cursor: help; color: #2c7be5; font-weight: bold; }
        .tooltip .tooltiptext {
            visibility: hidden; width: 420px; background-color: #f8f9fa; color: #000; text-align: left;
            border-radius: 8px; padding: 10px; position: absolute; z-index: 1;
            top: 125%; left: 50%; transform: translateX(-50%);
            box-shadow: 0px 0px 10px rgba(0,0,0,0.2); font-size: 13px; line-height: 1.4;
        }
        .tooltip:hover .tooltiptext { visibility: visible; }
        </style>
    """, unsafe_allow_html=True)

    calidad = {}
    for factor, niveles in descripciones.items():
        tooltip_html = f"<div class='tooltip'>‚ìò<div class='tooltiptext'><b>{factor}</b><br><br>{'<br>'.join(niveles)}</div></div>"
        st.markdown(f"### {factor} {tooltip_html}", unsafe_allow_html=True)
        calidad[factor] = st.slider("Selecciona nivel", 1, 4, 2, key=f"slider_{factor}")

    puntaje_total = sum(calidad.values())
    st.write(f"**Puntaje total:** {puntaje_total}/48")

    # -------------------------------------------------------
    # FECHA Y COMENTARIOS
    # -------------------------------------------------------
    st.subheader("Fecha y Comentarios")
    hoy = datetime.now()
    dia = st.number_input("D√≠a", min_value=1, max_value=31, value=hoy.day, key="dia_eval")
    mes = st.number_input("Mes", min_value=1, max_value=12, value=hoy.month, key="mes_eval")
    anio = st.number_input("A√±o", min_value=2000, max_value=hoy.year, value=hoy.year, key="anio_eval")
    comentarios = st.text_area("Comentarios", key="comentarios_eval")

# -------------------------------------------------------
# GUARDAR EVALUACI√ìN
# -------------------------------------------------------
if st.button("Guardar Evaluaci√≥n"):
    # Crear fila con datos base + evaluaci√≥n
    nueva_fila = [
        trab[c] for c in trabajadores.columns
    ] + [
        dia, mes, anio,
        meta_real["meta1_real"], meta_real["meta2_real"], meta_real["meta3_real"], meta_real["meta4_real"],
        resultados["resultado1"], resultados["resultado2"], resultados["resultado3"], resultados["resultado4"]
    ] + list(calidad.values()) + [puntaje_total, comentarios]

    # üîπ Conversi√≥n segura a tipos nativos
    nueva_fila = [str(x) if isinstance(x, (pd.Timestamp,)) else
                  (int(x) if isinstance(x, (int, float)) and float(x).is_integer() else
                   float(x) if isinstance(x, (int, float)) else
                   str(x))
                  for x in nueva_fila]

    # üîπ Inserta la nueva fila al final
    hoja.append_row(nueva_fila)
    st.success("‚úÖ Evaluaci√≥n guardada correctamente en Google Sheets.")



